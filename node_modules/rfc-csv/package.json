{
  "name": "rfc-csv",
  "description": "RFC 4180 CSV stream parser",
  "version": "0.2.0",
  "author": {
    "name": "Andreas Madsen",
    "email": "amwebdk@gmail.com"
  },
  "scripts": {
    "test": "tap test/test.js"
  },
  "main": "./csv.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/AndreasMadsen/rfc-csv.git"
  },
  "keywords": [
    "RFC 4180",
    "CSV",
    "stream",
    "parser"
  ],
  "devDependencies": {
    "tap": "0.4.x"
  },
  "license": "MIT",
  "engines": {
    "node": "0.10",
    "npm": "1"
  },
  "readme": "#rfc-csv\n\n> A valid CSV [RFC-4180](http://tools.ietf.org/html/rfc4180) stream v2 parser\n\n## Installation\n\n```sheel\nnpm install rfc-csv\n```\n\n## Documentation\n\n`rfc-csv` is a `Transform` stream there takes a buffer stream and\noutputs an object stream.\n\n```javascript\nvar fs = require('fs');\nvar csv = require('rfc-csv');\n\n// Creates a new CSV Transform stream\n// The constructor takes one argument `useHeader`. If `useHeader`\n// is true the first line will be skiped and a `header` event will be emitted\nvar parser = csv(true);\n\n// $cat file.csv:\n// id,open,end\\r\\n\n// 0,180.73,182.81\\r\\n\n// 1,183.23,183.72\\r\\n\n// 2,182.20,182.27\nfs.createReadStream('file.csv').pipe(parser);\n\n// Await header event\nparser.once('header', function (header) {\n  console.log(header);\n});\n\n// Standard Readable stream event\nparser.once('readable', function () {\n\n  // Read the first row there is an array of strings\n  var row = parser.read();\n\n  // RFC-4180 do not say anything about number type convertion, so that is\n  // something you must do, fortunately it is easy.\n  row = row.map(Number);\n\n  // Output row there is now an array of number\n  console.log(row);\n});\n```\n\n##License\n\n**The software is license under \"MIT\"**\n\n> Copyright (c) 2012 Andreas Madsen\n>\n> Permission is hereby granted, free of charge, to any person obtaining a copy\n> of this software and associated documentation files (the \"Software\"), to deal\n> in the Software without restriction, including without limitation the rights\n> to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n> copies of the Software, and to permit persons to whom the Software is\n> furnished to do so, subject to the following conditions:\n>\n> The above copyright notice and this permission notice shall be included in\n> all copies or substantial portions of the Software.\n>\n> THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n> IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n> FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n> AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n> LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n> OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n> THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/AndreasMadsen/rfc-csv/issues"
  },
  "homepage": "https://github.com/AndreasMadsen/rfc-csv",
  "_id": "rfc-csv@0.2.0",
  "_shasum": "74d970c2d288be5b8e9ed7e268f5eb08f6860ec3",
  "_from": "rfc-csv@*",
  "_resolved": "https://registry.npmjs.org/rfc-csv/-/rfc-csv-0.2.0.tgz"
}
